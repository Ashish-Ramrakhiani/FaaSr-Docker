name: openwhisk-r -> DockerHub

on: 
  workflow_dispatch:
    inputs:
      # BASE_IMAGE is the full user/name:tag of the base FaaSr image (stored in DockerHub) to build from 
      # Examples: janedoe/base-tidyverse:1.1.2, faasr/base-tidyverse:1.1.3
      BASE_IMAGE:
        description: 'base image e.g. public.ecr.aws/lambda/python:3.13'
        required: true
        default: 'nolcut/faasr-rpc-test:0.1.6'
      # TARGET_NAME is the name of the FaaS-specific image to build
      # Examples: aws-lambda-tidyverse
      TARGET_NAME:
        description: 'name of the FaaS-specific image to build'
        required: true
        default: 'openwhisk-r'
      # FAASR_VERSION is the FaaSr version tag to be used for this base FaaSr image
      # Examples: 1.1.2, 1.3.1
      FAASR_VERSION:
        description: 'FaaSr version'
        required: true 
      # FAASR_INSTALL_REPO is the GitHub repo to install FaaSr from
      # Examples: janedoe/FaaSr-Package-dev, faasr/FaaSr-Package
      FAASR_INSTALL_REPO:
        description: 'GitHub repo to install FaaSr from'
        required: true
        default: 'FaaSr/FaaSr-Backend'



permissions: write-all

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Login to Docker Hub 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Openwhisk Container image
        run: |
          cd faas_specific
          docker build -f openwhisk-r.Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.TARGET_NAME }}:${{ github.event.inputs.FAASR_VERSION }} --build-arg BASE_IMAGE=${{ github.event.inputs.BASE_IMAGE }} --build-arg FAASR_VERSION=${{ github.event.inputs.FAASR_VERSION }} --build-arg FAASR_INSTALL_REPO=${{ github.event.inputs.FAASR_INSTALL_REPO }} .

      - name: Push Openwhisk image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.TARGET_NAME }}:${{ github.event.inputs.FAASR_VERSION }}

      - name: Tag and push as latest 
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.TARGET_NAME }}:${{ github.event.inputs.FAASR_VERSION }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.TARGET_NAME }}:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.inputs.TARGET_NAME }}:latest
